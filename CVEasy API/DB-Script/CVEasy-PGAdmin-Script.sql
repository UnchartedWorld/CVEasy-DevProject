-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."TableComments"
(
    "commentID" integer NOT NULL DEFAULT nextval('"TableComments_commentID_seq"'::regclass),
    "themeID" integer NOT NULL,
    "userID" integer NOT NULL,
    comment bytea,
    CONSTRAINT "TableComments_pkey" PRIMARY KEY ("commentID"),
    CONSTRAINT "TableComments_themeID_key" UNIQUE ("themeID"),
    CONSTRAINT "TableComments_userID_key" UNIQUE ("userID")
);

CREATE TABLE IF NOT EXISTS public."TableTags"
(
    "tagID" integer NOT NULL DEFAULT nextval('"TableTags_tagID_seq"'::regclass),
    tag character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "tagDescr" character varying(400) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "TableTags_pkey" PRIMARY KEY ("tagID"),
    CONSTRAINT "TableTags_tag_key" UNIQUE (tag)
);

CREATE TABLE IF NOT EXISTS public."TableThemeTag"
(
    "themeTagID" integer NOT NULL DEFAULT nextval('"TableThemeTag_themeTagID_seq"'::regclass),
    "themeID" integer NOT NULL,
    "tagID" integer NOT NULL,
    CONSTRAINT "TableThemeTag_pkey" PRIMARY KEY ("themeTagID")
);

CREATE TABLE IF NOT EXISTS public."TableThemes"
(
    "themeID" integer NOT NULL DEFAULT nextval('"TableThemes_themeID_seq"'::regclass),
    "tagID" integer NOT NULL,
    "createdBy_UserID" integer NOT NULL,
    "themeName" character varying(300) COLLATE pg_catalog."default" NOT NULL,
    "themeDescr" character varying(5100) COLLATE pg_catalog."default",
    "themeFile" character varying(150) COLLATE pg_catalog."default" NOT NULL,
    "deletedDate" timestamp without time zone,
    version character varying(30) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "TableThemes_pkey" PRIMARY KEY ("themeID"),
    CONSTRAINT "TableThemes_themeName_key" UNIQUE ("themeName")
);

CREATE TABLE IF NOT EXISTS public."TableUser"
(
    "userID" integer NOT NULL DEFAULT nextval('"TableUser_userID_seq"'::regclass),
    "loginName" character varying(200) COLLATE pg_catalog."default" NOT NULL,
    "passwordHash" character varying(200) COLLATE pg_catalog."default" NOT NULL,
    "passwordSalt" character varying(600) COLLATE pg_catalog."default" NOT NULL,
    email character varying(350) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "TableUser_pkey" PRIMARY KEY ("userID"),
    CONSTRAINT "TableUser_loginName_key" UNIQUE ("loginName")
);

CREATE TABLE IF NOT EXISTS public."TableUserDetails"
(
    "userDetailsID" integer NOT NULL DEFAULT nextval('"TableUserDetails_userDetailsID_seq"'::regclass),
    "userID" integer NOT NULL,
    "firstName" character varying(200) COLLATE pg_catalog."default",
    "middleNames" character varying(200) COLLATE pg_catalog."default",
    "lastName" character varying(200) COLLATE pg_catalog."default",
    "phoneNum" integer,
    CONSTRAINT "TableUserDetails_pkey" PRIMARY KEY ("userDetailsID"),
    CONSTRAINT "TableUserDetails_userID_key" UNIQUE ("userID")
);

CREATE TABLE IF NOT EXISTS public."TableUserRole"
(
    "userRoleID" integer NOT NULL DEFAULT nextval('"TableUserRole_userRoleID_seq"'::regclass),
    "userRole" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "userID" integer NOT NULL,
    CONSTRAINT "TableUserRole_pkey" PRIMARY KEY ("userRoleID"),
    CONSTRAINT "TableUserRole_userID_key" UNIQUE ("userID")
);

ALTER TABLE IF EXISTS public."TableComments"
    ADD CONSTRAINT tablecomments_tableuser_userid_fk FOREIGN KEY ("userID")
    REFERENCES public."TableUser" ("userID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "TableComments_userID_key"
    ON public."TableComments"("userID");


ALTER TABLE IF EXISTS public."TableThemeTag"
    ADD CONSTRAINT tablethemetag_tabletags_tagid_fk FOREIGN KEY ("tagID")
    REFERENCES public."TableTags" ("tagID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."TableThemeTag"
    ADD CONSTRAINT tablethemetag_tablethemes_themeid_fk FOREIGN KEY ("themeID")
    REFERENCES public."TableThemes" ("themeID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."TableThemes"
    ADD CONSTRAINT tablethemes_tableuser_userid_fk FOREIGN KEY ("createdBy_UserID")
    REFERENCES public."TableUser" ("userID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."TableUserDetails"
    ADD CONSTRAINT tableuserdetails_tableuser_userid_fk FOREIGN KEY ("userID")
    REFERENCES public."TableUser" ("userID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "TableUserDetails_userID_key"
    ON public."TableUserDetails"("userID");


ALTER TABLE IF EXISTS public."TableUserRole"
    ADD CONSTRAINT tableuserrole_tableuser_userid_fk FOREIGN KEY ("userID")
    REFERENCES public."TableUser" ("userID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "TableUserRole_userID_key"
    ON public."TableUserRole"("userID");

END;